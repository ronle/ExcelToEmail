Sub Mail_Selection_Range_Outlook_Body()
'For Tips see: http://www.rondebruin.nl/win/winmail/Outlook/tips.htm
'Don't forget to copy the function RangetoHTML in the module.
'Working in Excel 2000-2013
    Dim rng As Range
    Dim OutApp As Object
    Dim OutMail As Object
    Dim Fname As String
    Dim StrBody As String
    Dim cid As String
    
    Sheets("Sheet1").Select
    Set rng = Range("Chart2")
    rng.Select
    On Error Resume Next
    'Only the visible cells in the selection
    Set rng = Selection.SpecialCells(xlCellTypeVisible)
    'You can also use a fixed range if you want
    'Set rng = Sheets("YourSheet").Range("D4:D12").SpecialCells(xlCellTypeVisible)
    On Error GoTo 0
    If rng Is Nothing Then
        MsgBox "The selection is not a range or the sheet is protected" & _
               vbNewLine & "please correct and try again.", vbOKOnly
        Exit Sub
    End If
    With Application
        .EnableEvents = False
        .ScreenUpdating = False
    End With
    Set OutApp = CreateObject("Outlook.Application")
    Set Ns = OutApp.GetNamespace("MAPI")
    Ns.Logon
    Set OutMail = OutApp.CreateItem(0)
    'File path/name of the gif file
    Fname = Environ$("temp") & "\usage_chart.jpg"
    With ActiveWorkbook.Worksheets("Sheet1").ChartObjects("Chart 1")
    .Select
        'Save Chart named "Chart 1" as gif file
        'If you hold down the CTRL key when you select the chart
        'in 2000-2013 you see the name in the Name box(formula bar)
    .Chart.Export _
            Filename:=Fname, FilterName:="JPG"
    End With
    Set colAttach = OutMail.Attachments
      Set l_Attach = colAttach.Add(Fname)
      l_Attach.PropertyAccessor.SetProperty "http://schemas.microsoft.com/mapi/proptag/0x370E001F", "image/jpeg"  'Change From 0x370eE001E
      l_Attach.PropertyAccessor.SetProperty "http://schemas.microsoft.com/mapi/proptag/0x3712001F", "myident" 'Changed from 0x3712001E
      OutMail.PropertyAccessor.SetProperty "http://schemas.microsoft.com/mapi/id/{00062008-0000-0000-C000-000000000046}/8514000B", True
    On Error Resume Next
    With OutMail
        .To = Sheets("Sheet1").Range("B2").Value
        .CC = Sheets("Sheet1").Range("B3").Value
        .BCC = Sheets("Sheet1").Range("B4").Value
        .Subject = "This is an automated email to be sent on: " & Date
        .HTMLBody = "<p style='font-family:calibri;font size='11'>" & "This is the body of the email, place any text in this section" & "<br>" & _
        StrBody & RangetoHTML(rng) & "<br>" & _
        "<img src = cid:myident >" 'height='300' width='1120'
        .Display   'or use .Send
    End With
    On Error GoTo 0
    With Application
        .EnableEvents = True
        .ScreenUpdating = True
    End With
    'Delete the gif file
    Kill Fname
    Set OutMail = Nothing
    Set OutApp = Nothing
End Sub


Function RangetoHTML(rng As Range)
' Changed by Ron de Bruin 28-Oct-2006
' Working in Office 2000-2013
    Dim fso As Object
    Dim ts As Object
    Dim TempFile As String
    Dim TempWB As Workbook
    TempFile = Environ$("temp") & "\" & Format(Now, "dd-mm-yy h-mm-ss") & ".htm"
    'Copy the range and create a new workbook to past the data in
    rng.Copy
    Set TempWB = Workbooks.Add(1)
    With TempWB.Sheets(1)
        .Cells(1).PasteSpecial Paste:=8
        .Cells(1).PasteSpecial xlPasteValues, , False, False
        .Cells(1).PasteSpecial xlPasteFormats, , False, False
        .Cells(1).Select
        Application.CutCopyMode = False
        On Error Resume Next
        .DrawingObjects.Visible = True
        .DrawingObjects.Delete
        On Error GoTo 0
    End With
    'Publish the sheet to a htm file
    With TempWB.PublishObjects.Add( _
         SourceType:=xlSourceRange, _
         Filename:=TempFile, _
         Sheet:=TempWB.Sheets(1).Name, _
         Source:=TempWB.Sheets(1).UsedRange.Address, _
         HtmlType:=xlHtmlStatic)
        .Publish (True)
    End With
    'Read all data from the htm file into RangetoHTML
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set ts = fso.GetFile(TempFile).OpenAsTextStream(1, -2)
    RangetoHTML = ts.readall
    ts.Close
    RangetoHTML = Replace(RangetoHTML, "align=center x:publishsource=", _
                          "align=left x:publishsource=")
    'Close TempWB
    TempWB.Close savechanges:=False
    'Delete the htm file we used in this function
    Kill TempFile
    Set ts = Nothing
    Set fso = Nothing
    Set TempWB = Nothing
End Function
